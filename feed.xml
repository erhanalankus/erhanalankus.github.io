<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.4">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2019-04-08T13:31:32+03:00</updated><id>/feed.xml</id><title type="html">Erhan Alankuş</title><subtitle>Yazılımcı, elektronik sevdalısı. Burada blog yazıyor.</subtitle><entry><title type="html"></title><link href="/2019/04/08/2019-04-08-asp.net-core-anti-forgery-token.html" rel="alternate" type="text/html" title="" /><published>2019-04-08T13:31:32+03:00</published><updated>2019-04-08T13:31:32+03:00</updated><id>/2019/04/08/2019-04-08-asp.net-core-anti-forgery-token</id><content type="html" xml:base="/2019/04/08/2019-04-08-asp.net-core-anti-forgery-token.html">&lt;p&gt;Anti-forgery token, çoğu zaman otomatik olarak sayfaya yerleşir ve kullanılır, fakat bazen sizin eklemeniz gerekebilir. Bu örnekteki sayfamız, herhangi bir controller action’a ulaşmayacak şekilde planlanmış bir sayfa. Fakat sonradan eklenen bir istek gereği bir controller action’a POST yapması gerekti. Bunun için bu sayfada bir anti-forgery token yaratmamız ve bu token’i yapacağımız POST request’te kullanmamız gerekiyor.&lt;/p&gt;

&lt;h3 id=&quot;anti-forgery-token-yaratma&quot;&gt;Anti-Forgery Token Yaratma&lt;/h3&gt;
&lt;p&gt;Anti-forgery token bulundurmasını istediğimiz cshtml dosyasının üst kısmına aşağıdaki satırları ekliyoruz:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

&amp;lt;input type=&quot;hidden&quot; id=&quot;RequestVerificationToken&quot;
       name=&quot;RequestVerificationToken&quot; value=&quot;@GetAntiXsrfRequestToken()&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu satırlar, sayfamızda “RequestVerificationToken” id’sine sahip gizli bir input field yaratacak. Sayfadan yapacağımız POST request’in header’larına bu token’i eklememiz gerekecek.&lt;/p&gt;

&lt;h3 id=&quot;anti-forgery-token-kullanma&quot;&gt;Anti-Forgery Token Kullanma&lt;/h3&gt;
&lt;p&gt;Aşağıda JavaScript ile POST request’imizi yaptığımız function’ı görebilirsiniz. Template controller, Delete action’ına bir POST request yapıyoruz. URL kısmında bir id gönderiyoruz. POST başarılı olursa sayfayı yeniliyoruz, POST başarısız olursa “Delete failed.” uyarısı gösteriyoruz. İkinci “setRequestHeader” metod çağrısında anti-forgery token’i POST request’e nasıl dahil ettiğimizi görebilirsiniz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function deleteTemplate(uidOftheItemToBeDeleted) {
    let postUrlFragment = 'id=' + uidOftheItemToBeDeleted;
    let xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function () {
        if (xhttp.readyState === XMLHttpRequest.DONE) {
            if (xhttp.status === 200) {
                location.reload();
            } else {
                alert('Delete failed.');
            }
        }
    };
    xhttp.open('POST', '..\/Template\/Delete', true);
    xhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
    xhttp.setRequestHeader('RequestVerificationToken', document.getElementById('RequestVerificationToken').value);
    xhttp.send(postUrlFragment);
} Sevgiler.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author></entry><entry><title type="html">İki Metini Hızlıca Karşılaştırma</title><link href="/productivity/2018/11/06/clipboard-compare.html" rel="alternate" type="text/html" title="İki Metini Hızlıca Karşılaştırma" /><published>2018-11-06T00:00:00+03:00</published><updated>2018-11-06T00:00:00+03:00</updated><id>/productivity/2018/11/06/clipboard-compare</id><content type="html" xml:base="/productivity/2018/11/06/clipboard-compare.html">&lt;p&gt;Clipboard Compare, iki metini hızlıca karşılaştırmak için güzel bir araç.&lt;/p&gt;

&lt;p&gt;Önce Beyond Compare’i yüklüyoruz, yükleme seçeneklerinde Clipboard Compare’in seçili olduğundan emin oluyoruz.&lt;/p&gt;

&lt;p&gt;Yükleme tamamlandıktan sonra System Tray’e eklenen Clipboard Compare ikonundan Options’a girip şu ayarları yapıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-11-06/clipboard-compare-options.png&quot; alt=&quot;Clipboard Compare options&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sonra karşılaştırmak istediğimiz metinleri sırayla kopyalıyoruz(Ctrl+C).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-11-06/texts-side-by-side.png&quot; alt=&quot;Texts to compare, side by side&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ve Ctrl+Alt+C yaptığımızda karşımıza karşılaştırma sonuçları geliyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-11-06/compare-results.png&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bunu çok sevdim çünkü tutorial takip ederken kodu copy-paste yapmamak lazım, kaynaktan bakarak yazmak lazım. Bu sayede hem kodun üzerinde daha çok düşünmüş oluyoruz, hem de bu yazım aşamasında rastlanabilecek sorunlara rastlayıp çözüyoruz, yazama işini pratikleştiriyoruz. Doğru yazıp yazmadığımızın teyidini de bu sayede çok hızlı yapabiliyoruz.&lt;/p&gt;</content><author><name></name></author><summary type="html">Clipboard Compare, iki metini hızlıca karşılaştırmak için güzel bir araç.</summary></entry><entry><title type="html">Blogun İlk Yazısı</title><link href="/casual/2018/10/29/blogun-ilk-yazisi.html" rel="alternate" type="text/html" title="Blogun İlk Yazısı" /><published>2018-10-29T00:00:00+03:00</published><updated>2018-10-29T00:00:00+03:00</updated><id>/casual/2018/10/29/blogun-ilk-yazisi</id><content type="html" xml:base="/casual/2018/10/29/blogun-ilk-yazisi.html">&lt;p&gt;İlk blog postumuza hoş geldiniz.&lt;/p&gt;

&lt;p&gt;Aslında ilk blogum değil. Öğrenciyken livejournal’da günlük tarzı yazılar yazıyordum. Boş şeyler yazıyordum ama benim için iyi oluyordu. Kendimi ifade etme yeteneğim gelişiyordu. O ara müzikle de uğraşıyorduk, şarkı sözü yazmaya çalışırken de faydasını görüyordum.&lt;/p&gt;

&lt;p&gt;Bir başka bloga da 2014’te başlamıştım. Bizim alankus.com’da bir wordpress instance’ında bir development günlüğü, türkçe tutorial’lar, ufak tüyolar vs. yazıyordum. Baya bi yazı birikmişti orada. Ama alankus.com’u yenilememeye karar verince ve o dönem blogu yedekleyecek kadar umursamayınca o da uçtu gitti.&lt;/p&gt;

&lt;p&gt;Bir süredir tekrar blog yazmaya başlamayı düşünüyordum ama bunu wordpress ile yapmak istemiyordum. Ücretsiz olarak wordpress.com’da yapsan bir sürü çirkin reklam, para verip temiz yapsan her sene domain parası, hosting parası…&lt;/p&gt;

&lt;p&gt;Bu Jekyll işini farkedince çok hoşuma gitti. Ruby geliştirme ortamında çalışan bir static site generator. Post’ları .md dosyası olarak oluşturuyorum, Jekyll statik bir siteye derliyor, github’a gönderiyorum. Github’da static hosting bedava, domain de gayet güzel: &lt;a href=&quot;https://erhanalankus.github.io&quot;&gt;erhanalankus.github.io&lt;/a&gt;. Hem de https kurulumunu öğrenme işini bir tık daha ileriye erteleme imkanı sundu :)&lt;/p&gt;

&lt;p&gt;Vatana millete hayırlı olsun!&lt;/p&gt;</content><author><name></name></author><summary type="html">İlk blog postumuza hoş geldiniz.</summary></entry><entry><title type="html">Orange Pi Deneme</title><link href="/test/2018/10/29/orange-pi-deneme.html" rel="alternate" type="text/html" title="Orange Pi Deneme" /><published>2018-10-29T00:00:00+03:00</published><updated>2018-10-29T00:00:00+03:00</updated><id>/test/2018/10/29/orange-pi-deneme</id><content type="html" xml:base="/test/2018/10/29/orange-pi-deneme.html">&lt;p&gt;Seedbox çalıştırdığım evdeki Orange Pi Zero üzerinde bir blog post oluşturmayı deniyorum. “Zamanında VIM ile blog yazardım” da diyebilcem bu sayede :)&lt;/p&gt;

&lt;p&gt;Sevgiler.&lt;/p&gt;</content><author><name></name></author><summary type="html">Seedbox çalıştırdığım evdeki Orange Pi Zero üzerinde bir blog post oluşturmayı deniyorum. “Zamanında VIM ile blog yazardım” da diyebilcem bu sayede :)</summary></entry><entry><title type="html">Plaka Şehir App Linkleri</title><link href="/promotion/2018/10/29/plaka-sehir-app-linkleri.html" rel="alternate" type="text/html" title="Plaka Şehir App Linkleri" /><published>2018-10-29T00:00:00+03:00</published><updated>2018-10-29T00:00:00+03:00</updated><id>/promotion/2018/10/29/plaka-sehir-app-linkleri</id><content type="html" xml:base="/promotion/2018/10/29/plaka-sehir-app-linkleri.html">&lt;p&gt;&lt;img src=&quot;/assets/images/plaka-sehir-banner.jpg&quot; alt=&quot;Plaka Sehir app banner&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Marketlerde üçüncü yılını dolduran Plaka Şehir uygulamamı aşağıdaki linklerden indirebilirsiniz:&lt;/p&gt;

&lt;h3 id=&quot;ios-app-storeda-plaka-Şehir&quot;&gt;iOS: &lt;a href=&quot;https://itunes.apple.com/tr/app/plaka-sehir/id1050212618&quot;&gt;App Store’da Plaka Şehir&lt;/a&gt;&lt;/h3&gt;

&lt;h3 id=&quot;android-play-storeda-plaka-Şehir&quot;&gt;Android: &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.erh.PlakaSehir&quot;&gt;Play Store’da Plaka Şehir&lt;/a&gt;&lt;/h3&gt;</content><author><name></name></author><summary type="html"></summary></entry></feed>